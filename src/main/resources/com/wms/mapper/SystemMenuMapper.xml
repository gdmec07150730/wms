<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wms.mapper.SystemMenuMapper" >
  <resultMap id="BaseResultMap" type="com.wms.domain.SystemMenu" >
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="url" property="url" />
    <result column="sn" property="sn" />
    <association property="parent" javaType="com.wms.domain.SystemMenu" columnPrefix="p_">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `systemmenu`
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.wms.domain.SystemMenu" useGeneratedKeys="true" keyProperty="id" >
    insert into `systemmenu` (name, url, sn, parent_id)
    values (#{name}, #{url}, #{sn}, #{parent.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wms.domain.SystemMenu" >
    update `systemmenu`
    set name = #{name},
      url = #{url},
      sn = #{sn},
      parent_id = #{parent.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select c.id,c.name,c.url,c.sn,p.id p_id,p.name p_name
    from systemmenu c left join systemmenu p on c.parent_id = p.id
    where c.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, url, sn, parent_id
    from `systemmenu` where parent_id is not null
  </select>

  <sql id="base_where">
    <where>
      <choose>
        <when test="parentId == null">
          and c.parent_id is null
        </when>
        <otherwise>
          and c.parent_id = #{parentId}
        </otherwise>
      </choose>
    </where>
  </sql>


  <select id="queryForCount" resultType="java.lang.Integer">
    select count(c.id) from systemmenu c left join systemmenu p on c.parent_id = p.id
    <include refid="base_where"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select c.id,c.name,c.url,c.sn,p.id p_id,p.name p_name
    from systemmenu c left join systemmenu p on c.parent_id = p.id
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>

  <select id="selectAllByRoleId" resultMap="BaseResultMap">
    select s.id,s.name
    from systemmenu s join role_menu rm on s.id = rm.menu_id
    where rm.role_id = #{id}
  </select>
  <select id="loadMenusByParentSn" resultType="java.util.Map">
    select c.id id,p.id pId,c.name name,c.url action
    from systemmenu c left join systemmenu p on c.parent_id = p.id
    where p.sn=#{parentSn}
  </select>
  <select id="loadMenusByParentSnAndEmpId" resultType="java.util.Map">
    select c.id id,p.id pId,c.name name,c.url action
    from systemmenu c left join systemmenu p on c.parent_id = p.id
          join role_menu rm on c.id = rm.menu_id
          join employee_role er on er.role_id = rm.role_id
    where er.employee_id = #{empId} and p.sn=#{parentSn}
  </select>

</mapper>