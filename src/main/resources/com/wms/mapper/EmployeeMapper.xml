<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.wms.domain.Employee">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="password" property="password" />
    <result column="email" property="email" />
    <result column="age" property="age" />
    <result column="admin" property="admin" />
    <association property="dept" javaType="com.wms.domain.Department" columnPrefix="d_">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </association>
    <collection property="roles" ofType="com.wms.domain.Role"
                column="id" select="com.wms.mapper.RoleMapper.selectRoleByEmpId"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `employee`
    where id = #{id}
  </delete>
    <delete id="batchDelete">
        delete from employee where id in
        <foreach collection="array" open="(" separator="," close=")" item="item">
            ${item}
        </foreach>
    </delete>

    <delete id="deleteRelation">
        delete from employee_role where employee_id = #{employeeId}
    </delete>

    <insert id="insert" keyProperty="id" parameterType="com.wms.domain.Employee" useGeneratedKeys="true">
    insert into `employee` (name, password, email, age, admin, dept_id)
    values (#{name}, #{password}, #{email}, #{age}, #{admin}, #{dept.id})
  </insert>

    <insert id="insertRelation">
        insert into employee_role (employee_id,role_id) values (#{employeeId},#{roleId})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.wms.domain.Employee">
    update `employee`
    set name = #{name},
      email = #{email},
      age = #{age},
      admin = #{admin},
      dept_id = #{dept.id}
    where id = #{id}
  </update>



  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="base_select"/>
    from <include refid="base_data"/>
    where e.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="base_select"/>
    from <include refid="base_data"/>
  </select>


  <select id="queryForCount" resultType="java.lang.Integer">
    select count(e.id) from
          <include refid="base_data" />
        <include refid="base_where" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    select <include refid="base_select" /> FROM
          <include refid="base_data" />
      <include refid="base_where" />
          limit #{start},#{pageSize}
  </select>
    <select id="selectByUsernameAndPassword" resultType="com.wms.domain.Employee">
        select id,name,password,email,age,admin,dept_id from employee where name = #{username} and password = #{password}
    </select>

    <sql id="base_select">
        e.id,e.name,e.password,e.email,e.age,e.admin,e.dept_id,d.id d_id,d.name d_name
    </sql>

    <sql id="base_data">
        employee e left join department d on e.dept_id = d.id
    </sql>

    <sql id="base_where">
        <where>
            <if test="keyword != null and keyword != ''">
                and (e.name like concat('%',#{keyword},'%') or e.email like concat('%',#{keyword},'%'))
            </if>
            <if test="deptId &gt; 0 and deptId != null">
                and e.dept_id = #{deptId}
            </if>
        </where>
    </sql>

</mapper>